external: External Data API

data_pipeline: Data Engineering {
  fetcher
  queue
  consumer
}

ml_engineering: Machine Learning Engineering {
  trainer
  model
}

application_layer: Application Layer {
  backend
  ui
}

fetcher: Data Fetcher

queue: Kafka {
  shape: queue
}

consumer: Data consumer

trainer: Trainer

model: Tradewise

backend: Backend

ui: User Interface
postgres: Postgres {
  shape: cylinder
  icon: https://icons.terrastruct.com/dev%2Fpostgresql.svg
  icon.near: bottom-center
}

application_layer.ui -> application_layer.backend: fetch data analytics
application_layer.backend -> ml_engineering.model: generate trade suggestions
application_layer.backend -> postgres: fetch data from database

data_pipeline.fetcher -> external: fetch trader data
data_pipeline.fetcher -> data_pipeline.queue: send data to queue
data_pipeline.queue -> data_pipeline.consumer: send data to consumer
data_pipeline.consumer -> postgres: insert data in postgres

ml_engineering.trainer -> postgres: read the data from postgres
ml_engineering.trainer -> ml_engineering.model: train the model
ml_engineering.model -> postgres: update the forecast
